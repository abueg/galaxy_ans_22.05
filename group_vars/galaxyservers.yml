---
# Python 3 support
pip_virtualenv_command: /rugpfs/fs0/home/vgl_galaxy/miniconda3/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python3-virtualenv    # usegalaxy_eu.certbot
pip_package: python3-pip                               # geerlingguy.pip

# PostgreSQL
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
postgresql_objects_port: 5432
postgresql_objects_login_host: vglgalaxy.rockefeller.edu
postgresql_objects_login_user: vgl_galaxy

# PostgreSQL Backups
postgresql_backup_dir: /lustre/fs5/vgl/scratch/vgl_galaxy/data/backups
postgresql_backup_local_dir: "{{ '~vgl_galaxy' | expanduser }}/scratch/backups"

# golang
golang_gopath: $HOME/miniconda3/bin/go

# Galaxy
galaxy_create_user: false
galaxy_separate_privileges: false
galaxy_become_users: {}
galaxy_privsep_user: vgl_galaxy
galaxy_manage_paths: true 
galaxy_layout: root-dir
galaxy_root: /lustre/fs5/vgl/scratch/vgl_galaxy/galaxy_srv/galaxy/
galaxy_user: {name: vgl_galaxy, shell: /bin/bash}
galaxy_commit_id: release_22.05
galaxy_force_checkout: true
conda_auto_install: true
tool_dependency_dir: " {{ galaxy_tool_dependency_dir }} "

galaxy_config:
  galaxy:
    admin_users: admin@admin.org
    brand: "ðŸ§¬ VGL"
    database_connection: "postgresql://vgl_galaxy@localhost:5432/galaxy"
    file_path: /lustre/fs5/vgl/scratch/vgl_galaxy/galaxy_data/
    check_migrate_tools: false 
    object_store_store_by: uuid
    tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
    id_secret: "{{ vault_id_secret }}"
    require_login: true
    allow_user_dataset_purge: true
    # file locations
    library_import_dir: /lustre/fs5/vgl/scratch/vgl_galaxy/galaxy_srv/data_libraries/admin/
    user_library_import_dir: /lustre/fs5/vgl/scratch/vgl_galaxy/galaxy_srv/data_libraries/user/
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    job_resource_params_file: "{{ galaxy_config_dir }}/job_resource_params_conf.xml"
    tool_destinations_config_file: "{{ galaxy_config_dir }}/tool_destinations.yml"
    file_sources_config_file: "{{ galaxy_config_dir }}/file_sources_conf.yml"
    # SQL performance
    database_engine_option_server_side_cursors: true
    slow_query_log_threshold: 5
    enable_per_request_sql_debugging: true
    # File serving performance
    # nginx_x_accel_redirect_base: /_x_accel_redirect
    # Automation / ease of use / user-facing features
    watch_job_rules: 'auto'
    allow_path_paste: true
    enable_quotas: true
    allow_user_deletion: true
    show_welcome_with_login: true
    expose_user_name: true
    expose_dataset_path: true
    expose_potentially_sensitive_job_metrics: true
    # NFS workarounds
    retry_job_output_collection: 3
    # Debugging
    cleanup_job: onsuccess
    allow_user_impersonation: true
    # tool security
    outputs_to_working_directory: true
  gravity:
    galaxy_root: "{{ galaxy_root }}/server"
    app_server: gunicorn
    gunicorn: 
      # listening options
      bind: vglgalaxy.rockefeller.edu:8080
#      bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
      # performance options
      workers: 6
      # other options that will be passed to gunicorn
      extra_args: '--forwarded-allow-ips="*"'
      preload: true
    celery:
      concurrency: 2
      loglevel: DEBUG
    handlers:
      handler:
        processes: 4
        pools:
          - job-handler
          - workflow-scheduler
  uwsgi:
    socket: vglgalaxy.rockefeller.edu:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /favicon.ico=/lustre/fs5/vgl/scratch/vgl_galaxy/galaxy_ans_22.05/files/assets/favicon.ico
      - /static={{ galaxy_server_dir }}/static
    #  - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico
    static-safe: client/galaxy/images
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2


galaxy_config_templates:
  - src: templates/galaxy/config/job_conf.xml
    dest: "{{ galaxy_config.galaxy.job_config_file }}"
  - src: templates/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config.galaxy.dependency_resolvers_config_file }}"
  - src: templates/galaxy/config/tool_destinations.yml
    dest: "{{ galaxy_config.galaxy.tool_destinations_config_file }}"
  - src: templates/galaxy/config/job_resource_params_conf.xml.j2
    dest: "{{ galaxy_config.galaxy.job_resource_params_file }}"
  - src: templates/galaxy/config/file_sources_conf.yml
    dest: "{{ galaxy_config.galaxy.file_sources_config_file }}"

galaxy_dynamic_job_rules:
- my_rules.py

galaxy_local_tools:
- testing.xml
- bionano.xml

galaxy_job_metrics_plugins:
- type: core
- type: cpuinfo
- type: meminfo
- type: uname
- type: env
#- type: cgroup
- type: hostname

# systemd
galaxy_manage_systemd: false
galaxy_systemd_env: [DRMAA_LIBRARY_PATH="/ru-auth/local/home/vgl_galaxy/dev/slurm-drmaa/slurm-drmaa-1.1.3/lib/libdrmaa.so"]
