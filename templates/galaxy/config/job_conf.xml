<job_conf>
    <plugins>
        <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner" workers="4"/>
        <plugin id="slurm" type="runner" load="galaxy.jobs.runners.slurm:SlurmJobRunner">
            <param id="drmaa_library_path">/ru-auth/local/home/vgl_galaxy/dev/slurm-drmaa/slurm-drmaa-1.1.3/lib/libdrmaa.so</param>
        </plugin>
    </plugins>
    <destinations default="vgl_default">
        <destination id="local" runner="local"/>
        <destination id="vgl_default" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --cpus-per-task=32 --partition=vgl</param>
        </destination>
        <destination id="vgl" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --partition=vgl</param>
        </destination>
        <destination id="vgl_1cpu" runner="slurm">
            <param id="nativeSpecification">--ntasks=1 --cpus-per-task=1 --partition=vgl</param>
        </destination>
        <destination id="vgl_4cpu" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --cpus-per-task=4 --partition=vgl</param>
        </destination>
        <destination id="bigmem" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --partition=vgl_bigmem</param>
        </destination>
        <destination id="bigmem_32cpu" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --cpus-per-task=32 --partition=vgl_bigmem</param>
        </destination>
        <destination id="bigmem_64cpu" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --cpus-per-task=64 --partition=vgl_bigmem</param>
        </destination>
        <destination id="dynamic_partition_cores" runner="dynamic">
            <param id="type">python</param>
            <param id="function">dynamic_partition_cores</param>
        </destination>
        <destination id="vgl_only" runner="dynamic">
            <param id="type">python</param>
            <param id="function">vgl_only</param>
        </destination>
        <destination id="bionano" runner="slurm">
            <param id="nativeSpecification">--nodes=1 --ntasks=1 --cpus-per-task=32 --partition=vgl</param>
            <env id="bionano_env" file="/lustre/fs5/vgl/store/vgl_galaxy/bionano/bionano_setup.sh"/>
        </destination>
    </destinations>
    <resources>
        <group id="partitioncores">partition,cores</group>
    </resources>
    <tools>
        <!-- dynamic partition cores tools -->
        <tool id="testing" destination="dynamic_partition_cores" resources="partitioncores" />
        <tool id="bwa_mem" destination="dynamic_partition_cores" resources="partitioncores" />
        <tool id="meryl" destination="dynamic_partition_cores" resources="partitioncores" />
    	<tool id="yahs" destination="dynamic_partition_cores" resources="partitioncores" />
    	<tool id="bwa_mem2" destination="dynamic_partition_cores" resources="partitioncores" />
    	<!-- retry tools -->
    	<tool id="hifiasm" destination="dynamic_partition_cores" resources="partitioncores" />
    	<!-- bigmem tools -->
    	<tool id="smudgeplot" destination="bigmem_64cpu" />
        <!-- 4 cpu tools -->
        <tool id="gfastats" destination="vgl_4cpu" />
        <!-- 1 cpu tools -->
        <tool id="cat1" destination="vgl_1cpu" />
        <tool id="compose_text_param" destination="vgl_1cpu" />
        <tool id="compress_file" destination="vgl_1cpu" />
        <tool id="genomescope" destination="vgl_1cpu" />
        <tool id="tp_cat" destination="vgl_1cpu" />
        <!-- local tools -->
        <tool id="__DATA_FETCH__" destination="local" />
        <tool id="upload1" destination="local" />
        <!-- vgl staff only tools -->
        <tool id="export_remote" destination="vgl_only" />
        <!-- bionano -->
        <tool id="bionano" destination="bionano" />
    </tools>
</job_conf>
